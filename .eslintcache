[{"L:\\prog\\TodoTaskslist\\src\\index.tsx":"1","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\todolists-reducer.ts":"2","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"3","L:\\prog\\TodoTaskslist\\src\\api\\todolists-api.ts":"4","L:\\prog\\TodoTaskslist\\src\\app\\store.ts":"5","L:\\prog\\TodoTaskslist\\src\\app\\app-reducer.ts":"6","L:\\prog\\TodoTaskslist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"7","L:\\prog\\TodoTaskslist\\src\\app\\App.tsx":"8","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\tasks-reducer.ts":"9","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"10","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\TodolistsList.tsx":"11","L:\\prog\\TodoTaskslist\\src\\components\\AddItemForm\\AddItemForm.tsx":"12","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\tasks-sagas.ts":"13","L:\\prog\\TodoTaskslist\\src\\app\\app-sagas.ts":"14","L:\\prog\\TodoTaskslist\\src\\utils\\error-utils.ts":"15","L:\\prog\\TodoTaskslist\\src\\features\\Login\\Login.tsx":"16","L:\\prog\\TodoTaskslist\\src\\features\\Login\\auth-reducer.ts":"17","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\todolist-sagas.ts":"18"},{"size":643,"mtime":1624314624000,"results":"19","hashOfConfig":"20"},{"size":2771,"mtime":1667481952349,"results":"21","hashOfConfig":"20"},{"size":1735,"mtime":1624314624000,"results":"22","hashOfConfig":"20"},{"size":3106,"mtime":1666910487911,"results":"23","hashOfConfig":"20"},{"size":1189,"mtime":1667480492431,"results":"24","hashOfConfig":"20"},{"size":2705,"mtime":1667411379085,"results":"25","hashOfConfig":"20"},{"size":1058,"mtime":1624314624000,"results":"26","hashOfConfig":"20"},{"size":2664,"mtime":1667411428348,"results":"27","hashOfConfig":"20"},{"size":4278,"mtime":1667413722870,"results":"28","hashOfConfig":"20"},{"size":4117,"mtime":1667412457715,"results":"29","hashOfConfig":"20"},{"size":3856,"mtime":1667481859496,"results":"30","hashOfConfig":"20"},{"size":1543,"mtime":1624314624000,"results":"31","hashOfConfig":"20"},{"size":3820,"mtime":1667481971126,"results":"32","hashOfConfig":"20"},{"size":712,"mtime":1667411396951,"results":"33","hashOfConfig":"20"},{"size":1345,"mtime":1667480016248,"results":"34","hashOfConfig":"20"},{"size":4225,"mtime":1624314624000,"results":"35","hashOfConfig":"20"},{"size":1429,"mtime":1624314624000,"results":"36","hashOfConfig":"20"},{"size":2361,"mtime":1667481805323,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"10chbxb",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"L:\\prog\\TodoTaskslist\\src\\index.tsx",[],["78","79"],"L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\todolists-reducer.ts",["80","81"],"import { TodolistType } from \"../../api/todolists-api\";\nimport { Dispatch } from \"redux\";\nimport {\n  RequestStatusType,\n  SetAppStatusActionType,\n} from \"../../app/app-reducer\";\n\nconst initialState: Array<TodolistDomainType> = [];\n\nexport const todolistsReducer = (\n  state: Array<TodolistDomainType> = initialState,\n  action: ActionsType\n): Array<TodolistDomainType> => {\n  switch (action.type) {\n    case \"REMOVE-TODOLIST\":\n      return state.filter((tl) => tl.id != action.id);\n    case \"ADD-TODOLIST\":\n      return [\n        { ...action.todolist, filter: \"all\", entityStatus: \"idle\" },\n        ...state,\n      ];\n\n    case \"CHANGE-TODOLIST-TITLE\":\n      return state.map((tl) =>\n        tl.id === action.id ? { ...tl, title: action.title } : tl\n      );\n    case \"CHANGE-TODOLIST-FILTER\":\n      return state.map((tl) =>\n        tl.id === action.id ? { ...tl, filter: action.filter } : tl\n      );\n    case \"CHANGE-TODOLIST-ENTITY-STATUS\":\n      return state.map((tl) =>\n        tl.id === action.id ? { ...tl, entityStatus: action.status } : tl\n      );\n    case \"SET-TODOLISTS\":\n      return action.todolists.map((tl) => ({\n        ...tl,\n        filter: \"all\",\n        entityStatus: \"idle\",\n      }));\n    default:\n      return state;\n  }\n};\n\n// actions\nexport const removeTodolistAC = (id: string) =>\n  ({ type: \"REMOVE-TODOLIST\", id } as const);\nexport const addTodolistAC = (todolist: TodolistType) =>\n  ({ type: \"ADD-TODOLIST\", todolist } as const);\nexport const changeTodolistTitleAC = (id: string, title: string) =>\n  ({\n    type: \"CHANGE-TODOLIST-TITLE\",\n    id,\n    title,\n  } as const);\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) =>\n  ({\n    type: \"CHANGE-TODOLIST-FILTER\",\n    id,\n    filter,\n  } as const);\nexport const changeTodolistEntityStatusAC = (\n  id: string,\n  status: RequestStatusType\n) =>\n  ({\n    type: \"CHANGE-TODOLIST-ENTITY-STATUS\",\n    id,\n    status,\n  } as const);\nexport const setTodolistsAC = (todolists: Array<TodolistType>) =>\n  ({ type: \"SET-TODOLISTS\", todolists } as const);\n\n// types\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\ntype ActionsType =\n  | RemoveTodolistActionType\n  | AddTodolistActionType\n  | ReturnType<typeof changeTodolistTitleAC>\n  | ReturnType<typeof changeTodolistFilterAC>\n  | SetTodolistsActionType\n  | ReturnType<typeof changeTodolistEntityStatusAC>;\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\nexport type TodolistDomainType = TodolistType & {\n  filter: FilterValuesType;\n  entityStatus: RequestStatusType;\n};\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>;\n","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["82","83","84"],"L:\\prog\\TodoTaskslist\\src\\api\\todolists-api.ts",[],"L:\\prog\\TodoTaskslist\\src\\app\\store.ts",[],"L:\\prog\\TodoTaskslist\\src\\app\\app-reducer.ts",[],"L:\\prog\\TodoTaskslist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"L:\\prog\\TodoTaskslist\\src\\app\\App.tsx",["85","86"],"L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\tasks-reducer.ts",["87","88","89","90","91","92","93","94","95","96","97","98","99","100"],"L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["101","102","103","104","105","106"],"L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\TodolistsList.tsx",["107","108","109","110","111","112","113","114"],"import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppRootStateType } from \"../../app/store\";\nimport {\n  changeTodolistFilterAC,\n  FilterValuesType,\n  TodolistDomainType,\n} from \"./todolists-reducer\";\nimport { TasksStateType } from \"./tasks-reducer\";\nimport {\n  addTask as addTaskSG,\n  removeTask as removeTaskSG,\n  updateTask,\n} from \"./tasks-sagas\";\nimport { TaskStatuses } from \"../../api/todolists-api\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { AddItemForm } from \"../../components/AddItemForm/AddItemForm\";\nimport { Todolist } from \"./Todolist/Todolist\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  fetchTodolists,\n  removeTodolist as removeTodolistSG,\n  addTodolist as addTodolistSG,\n  changeTodolistTitle as changeTodolistTitleSG,\n} from \"./todolist-sagas\";\n\ntype PropsType = {\n  demo?: boolean;\n};\n\nexport const TodolistsList: React.FC<PropsType> = ({ demo = false }) => {\n  const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(\n    (state) => state.todolists\n  );\n  const tasks = useSelector<AppRootStateType, TasksStateType>(\n    (state) => state.tasks\n  );\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(\n    (state) => state.auth.isLoggedIn\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (demo || !isLoggedIn) {\n      return;\n    }\n    const thunk = fetchTodolists();\n    dispatch(thunk);\n  }, []);\n\n  const removeTask = useCallback(function (id: string, todolistId: string) {\n    const thunk = removeTaskSG(id, todolistId);\n    dispatch(thunk);\n  }, []);\n\n  const addTask = useCallback(function (title: string, todolistId: string) {\n    const thunk = addTaskSG(title, todolistId);\n    dispatch(thunk);\n  }, []);\n\n  const changeStatus = useCallback(function (\n    id: string,\n    status: TaskStatuses,\n    todolistId: string\n  ) {\n    const thunk = updateTask(id, { status }, todolistId);\n    dispatch(thunk);\n  },\n  []);\n\n  const changeTaskTitle = useCallback(function (\n    id: string,\n    newTitle: string,\n    todolistId: string\n  ) {\n    const thunk = updateTask(id, { title: newTitle }, todolistId);\n    dispatch(thunk);\n  },\n  []);\n\n  const changeFilter = useCallback(function (\n    value: FilterValuesType,\n    todolistId: string\n  ) {\n    const action = changeTodolistFilterAC(todolistId, value);\n    dispatch(action);\n  },\n  []);\n\n  const removeTodolist = useCallback(function (id: string) {\n    const thunk = removeTodolistSG(id);\n    dispatch(thunk);\n  }, []);\n\n  const changeTodolistTitle = useCallback(function (id: string, title: string) {\n    const thunk = changeTodolistTitleSG(id, title);\n    dispatch(thunk);\n  }, []);\n\n  const addTodolist = useCallback(\n    (title: string) => {\n      const thunk = addTodolistSG(title);\n      dispatch(thunk);\n    },\n    [dispatch]\n  );\n\n  if (!isLoggedIn) {\n    return <Redirect to={\"/login\"} />;\n  }\n  return (\n    <>\n      <Grid container style={{ padding: \"20px\" }}>\n        <AddItemForm addItem={addTodolist} />\n      </Grid>\n      <Grid container spacing={3}>\n        {todolists.map((tl) => {\n          let allTodolistTasks = tasks[tl.id];\n\n          return (\n            <Grid item key={tl.id}>\n              <Paper style={{ padding: \"10px\" }}>\n                <Todolist\n                  todolist={tl}\n                  tasks={allTodolistTasks}\n                  removeTask={removeTask}\n                  changeFilter={changeFilter}\n                  addTask={addTask}\n                  changeTaskStatus={changeStatus}\n                  removeTodolist={removeTodolist}\n                  changeTaskTitle={changeTaskTitle}\n                  changeTodolistTitle={changeTodolistTitle}\n                  demo={demo}\n                />\n              </Paper>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n","L:\\prog\\TodoTaskslist\\src\\components\\AddItemForm\\AddItemForm.tsx",["115","116","117"],"L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\tasks-sagas.ts",[],"L:\\prog\\TodoTaskslist\\src\\app\\app-sagas.ts",[],"L:\\prog\\TodoTaskslist\\src\\utils\\error-utils.ts",[],"L:\\prog\\TodoTaskslist\\src\\features\\Login\\Login.tsx",["118"],"import React from 'react'\nimport {\n    Button,\n    Checkbox,\n    FormControl,\n    FormControlLabel,\n    FormGroup,\n    FormLabel,\n    Grid,\n    TextField\n} from \"@material-ui/core\";\nimport {useFormik} from \"formik\";\nimport {loginTC} from \"./auth-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../app/store\";\nimport {Redirect} from \"react-router-dom\";\n\ntype FormikErrorType = {\n    email?: string\n    password?: string\n    rememberMe?: boolean\n}\nexport const Login = () => {\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state=>state.auth.isLoggedIn)\n   // const {isLoggedIn} = useSelector(selectAuthStore)\n\n    const dispatch = useDispatch()\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            rememberMe: false\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = 'email is required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = 'password is required';\n            } else if (values.password.length <= 2) {\n                errors.password = 'password must be at least 3 letters long';\n            }\n            return errors;\n        },\n        onSubmit: values => {\n            debugger\n            // alert(JSON.stringify(values))\n            dispatch(loginTC(values))\n            formik.resetForm()\n        }\n    })\n\n    if (isLoggedIn) {\n        return <Redirect to={'/'}/>\n    }\n    return (\n        <Grid container justify='center'>\n            <Grid item xs={4}>\n                <form onSubmit={formik.handleSubmit}>\n                    <FormControl>\n                        <FormLabel>\n                            <p>To log in get registered\n                                <a href={'https://social-network.samuraijs.com/'}\n                                   target={'_blank'}> here\n                                </a>\n                            </p>\n                            <p>or use common test account credentials:</p>\n                            <p>Email: free@samuraijs.com</p>\n                            <p>Password: free</p>\n                        </FormLabel>\n                        <FormGroup>\n                            <TextField\n                                label='email'\n                                margin='normal'\n                                {...formik.getFieldProps('email')}\n                                onBlur={formik.handleBlur}/>\n                            {formik.touched.email && formik.errors.email ?\n                                <div style={{color: 'red'}}>\n                                    {formik.errors.email}\n                                </div> : null}\n                            <TextField\n                                type='password'\n                                label='password'\n                                margin='normal'\n                                {...formik.getFieldProps('password')}\n                                onBlur={formik.handleBlur}\n                            />\n                            {formik.touched.password && formik.errors.password ?\n                                <div style={{color: 'red'}}>\n                                    {formik.errors.password}\n                                </div> : null}\n                            <FormControlLabel\n                                label={'Remember me'}\n                                control={<Checkbox\n                                    onChange={formik.handleChange}\n                                    value={formik.values.rememberMe}\n                                    name='rememberMe'\n                                />}/>\n                            <Button type={'submit'} variant={'contained'} color={'primary'}>\n                                Login\n                            </Button>\n                        </FormGroup>\n                    </FormControl>\n                </form>\n            </Grid>\n        </Grid>\n    )\n}","L:\\prog\\TodoTaskslist\\src\\features\\Login\\auth-reducer.ts",[],"L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\todolist-sagas.ts",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":16,"column":41,"nodeType":"125","messageId":"126","endLine":16,"endColumn":43},{"ruleId":"127","severity":1,"message":"128","line":91,"column":6,"nodeType":"129","messageId":"130","endLine":91,"endColumn":19},{"ruleId":"131","severity":1,"message":"132","line":15,"column":97,"nodeType":"133","endLine":15,"endColumn":130,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"132","line":20,"column":8,"nodeType":"133","endLine":20,"endColumn":41,"suggestions":"135"},{"ruleId":"131","severity":1,"message":"132","line":24,"column":8,"nodeType":"133","endLine":24,"endColumn":41,"suggestions":"136"},{"ruleId":"131","severity":1,"message":"137","line":35,"column":8,"nodeType":"133","endLine":35,"endColumn":10,"suggestions":"138"},{"ruleId":"131","severity":1,"message":"139","line":38,"column":8,"nodeType":"133","endLine":38,"endColumn":10,"suggestions":"140"},{"ruleId":"127","severity":1,"message":"141","line":7,"column":3,"nodeType":"129","messageId":"130","endLine":7,"endColumn":19},{"ruleId":"127","severity":1,"message":"142","line":11,"column":3,"nodeType":"129","messageId":"130","endLine":11,"endColumn":15},{"ruleId":"127","severity":1,"message":"143","line":15,"column":10,"nodeType":"129","messageId":"130","endLine":15,"endColumn":19},{"ruleId":"127","severity":1,"message":"144","line":18,"column":3,"nodeType":"129","messageId":"130","endLine":18,"endColumn":16},{"ruleId":"127","severity":1,"message":"145","line":20,"column":3,"nodeType":"129","messageId":"130","endLine":20,"endColumn":17},{"ruleId":"127","severity":1,"message":"146","line":25,"column":3,"nodeType":"129","messageId":"130","endLine":25,"endColumn":27},{"ruleId":"127","severity":1,"message":"147","line":27,"column":3,"nodeType":"129","messageId":"130","endLine":27,"endColumn":31},{"ruleId":"127","severity":1,"message":"148","line":29,"column":10,"nodeType":"129","messageId":"130","endLine":29,"endColumn":13},{"ruleId":"127","severity":1,"message":"149","line":29,"column":15,"nodeType":"129","messageId":"130","endLine":29,"endColumn":19},{"ruleId":"127","severity":1,"message":"150","line":29,"column":21,"nodeType":"129","messageId":"130","endLine":29,"endColumn":30},{"ruleId":"127","severity":1,"message":"151","line":29,"column":32,"nodeType":"129","messageId":"130","endLine":29,"endColumn":42},{"ruleId":"127","severity":1,"message":"152","line":30,"column":10,"nodeType":"129","messageId":"130","endLine":30,"endColumn":20},{"ruleId":"127","severity":1,"message":"153","line":30,"column":22,"nodeType":"129","messageId":"130","endLine":30,"endColumn":35},{"ruleId":"123","severity":1,"message":"124","line":43,"column":23,"nodeType":"125","messageId":"126","endLine":43,"endColumn":25},{"ruleId":"131","severity":1,"message":"154","line":43,"column":6,"nodeType":"133","endLine":43,"endColumn":8,"suggestions":"155"},{"ruleId":"131","severity":1,"message":"132","line":51,"column":5,"nodeType":"133","endLine":51,"endColumn":39,"suggestions":"156"},{"ruleId":"131","severity":1,"message":"132","line":61,"column":5,"nodeType":"133","endLine":61,"endColumn":51,"suggestions":"157"},{"ruleId":"131","severity":1,"message":"132","line":66,"column":5,"nodeType":"133","endLine":66,"endColumn":44,"suggestions":"158"},{"ruleId":"131","severity":1,"message":"132","line":70,"column":5,"nodeType":"133","endLine":70,"endColumn":44,"suggestions":"159"},{"ruleId":"131","severity":1,"message":"132","line":74,"column":5,"nodeType":"133","endLine":74,"endColumn":44,"suggestions":"160"},{"ruleId":"131","severity":1,"message":"161","line":50,"column":6,"nodeType":"133","endLine":50,"endColumn":8,"suggestions":"162"},{"ruleId":"131","severity":1,"message":"139","line":55,"column":6,"nodeType":"133","endLine":55,"endColumn":8,"suggestions":"163"},{"ruleId":"131","severity":1,"message":"139","line":60,"column":6,"nodeType":"133","endLine":60,"endColumn":8,"suggestions":"164"},{"ruleId":"131","severity":1,"message":"139","line":70,"column":3,"nodeType":"133","endLine":70,"endColumn":5,"suggestions":"165"},{"ruleId":"131","severity":1,"message":"139","line":80,"column":3,"nodeType":"133","endLine":80,"endColumn":5,"suggestions":"166"},{"ruleId":"131","severity":1,"message":"139","line":89,"column":3,"nodeType":"133","endLine":89,"endColumn":5,"suggestions":"167"},{"ruleId":"131","severity":1,"message":"139","line":94,"column":6,"nodeType":"133","endLine":94,"endColumn":8,"suggestions":"168"},{"ruleId":"131","severity":1,"message":"139","line":99,"column":6,"nodeType":"133","endLine":99,"endColumn":8,"suggestions":"169"},{"ruleId":"127","severity":1,"message":"170","line":2,"column":9,"nodeType":"129","messageId":"130","endLine":2,"endColumn":12},{"ruleId":"127","severity":1,"message":"171","line":2,"column":14,"nodeType":"129","messageId":"130","endLine":2,"endColumn":20},{"ruleId":"127","severity":1,"message":"172","line":2,"column":22,"nodeType":"129","messageId":"130","endLine":2,"endColumn":33},{"ruleId":"173","severity":1,"message":"174","line":67,"column":36,"nodeType":"175","endLine":67,"endColumn":53},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'ThunkDispatch' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["178"],["179"],["180"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["181"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["182"],"'GetTasksResponse' is defined but never used.","'ResponseType' is defined but never used.","'AnyAction' is defined but never used.","'setAppErrorAC' is defined but never used.","'setAppStatusAC' is defined but never used.","'handleServerAppErrorSaga' is defined but never used.","'handleServerNetworkErrorSaga' is defined but never used.","'put' is defined but never used.","'call' is defined but never used.","'PutEffect' is defined but never used.","'CallEffect' is defined but never used.","'AxiosError' is defined but never used.","'AxiosResponse' is defined but never used.","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["183"],["184"],["185"],["186"],["187"],["188"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["189"],["190"],["191"],["192"],["193"],["194"],["195"],["196"],"'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"197","fix":"199"},{"desc":"197","fix":"200"},{"desc":"201","fix":"202"},{"desc":"201","fix":"203"},{"desc":"204","fix":"205"},{"desc":"197","fix":"206"},{"desc":"197","fix":"207"},{"desc":"197","fix":"208"},{"desc":"197","fix":"209"},{"desc":"197","fix":"210"},{"desc":"211","fix":"212"},{"desc":"201","fix":"213"},{"desc":"201","fix":"214"},{"desc":"201","fix":"215"},{"desc":"201","fix":"216"},{"desc":"201","fix":"217"},{"desc":"201","fix":"218"},{"desc":"201","fix":"219"},"Update the dependencies array to be: [props]",{"range":"220","text":"221"},{"range":"222","text":"221"},{"range":"223","text":"221"},"Update the dependencies array to be: [dispatch]",{"range":"224","text":"225"},{"range":"226","text":"225"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"227","text":"228"},{"range":"229","text":"221"},{"range":"230","text":"221"},{"range":"231","text":"221"},{"range":"232","text":"221"},{"range":"233","text":"221"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"234","text":"235"},{"range":"236","text":"225"},{"range":"237","text":"225"},{"range":"238","text":"225"},{"range":"239","text":"225"},{"range":"240","text":"225"},{"range":"241","text":"225"},{"range":"242","text":"225"},[751,784],"[props]",[1052,1085],[1238,1271],[1202,1204],"[dispatch]",[1288,1290],[1389,1391],"[demo, dispatch, props.todolist.id]",[1544,1578],[1806,1852],[1960,1999],[2112,2151],[2270,2309],[1460,1462],"[demo, dispatch, isLoggedIn]",[1617,1619],[1774,1776],[1983,1985],[2200,2202],[2401,2403],[2534,2536],[2699,2701]]