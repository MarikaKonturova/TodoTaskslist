[{"L:\\prog\\TodoTaskslist\\src\\index.tsx":"1","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\todolists-reducer.ts":"2","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"3","L:\\prog\\TodoTaskslist\\src\\api\\todolists-api.ts":"4","L:\\prog\\TodoTaskslist\\src\\app\\store.ts":"5","L:\\prog\\TodoTaskslist\\src\\app\\app-reducer.ts":"6","L:\\prog\\TodoTaskslist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"7","L:\\prog\\TodoTaskslist\\src\\app\\App.tsx":"8","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\tasks-reducer.ts":"9","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"10","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\TodolistsList.tsx":"11","L:\\prog\\TodoTaskslist\\src\\components\\AddItemForm\\AddItemForm.tsx":"12","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\tasks-sagas.ts":"13","L:\\prog\\TodoTaskslist\\src\\app\\app-sagas.ts":"14","L:\\prog\\TodoTaskslist\\src\\utils\\error-utils.ts":"15","L:\\prog\\TodoTaskslist\\src\\features\\Login\\Login.tsx":"16","L:\\prog\\TodoTaskslist\\src\\features\\Login\\auth-reducer.ts":"17","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\todolist-sagas.ts":"18","L:\\prog\\TodoTaskslist\\src\\components\\EditableSpan\\EditableSpan.tsx":"19"},{"size":643,"mtime":1624314624000,"results":"20","hashOfConfig":"21"},{"size":2771,"mtime":1667481952349,"results":"22","hashOfConfig":"21"},{"size":1735,"mtime":1624314624000,"results":"23","hashOfConfig":"21"},{"size":3153,"mtime":1667822929347,"results":"24","hashOfConfig":"21"},{"size":1189,"mtime":1667480492431,"results":"25","hashOfConfig":"21"},{"size":2705,"mtime":1667411379085,"results":"26","hashOfConfig":"21"},{"size":1058,"mtime":1624314624000,"results":"27","hashOfConfig":"21"},{"size":2557,"mtime":1667493685126,"results":"28","hashOfConfig":"21"},{"size":2712,"mtime":1667503114178,"results":"29","hashOfConfig":"21"},{"size":4117,"mtime":1667412457715,"results":"30","hashOfConfig":"21"},{"size":3856,"mtime":1667481859496,"results":"31","hashOfConfig":"21"},{"size":1543,"mtime":1624314624000,"results":"32","hashOfConfig":"21"},{"size":3810,"mtime":1667824649513,"results":"33","hashOfConfig":"21"},{"size":712,"mtime":1667411396951,"results":"34","hashOfConfig":"21"},{"size":1345,"mtime":1667480016248,"results":"35","hashOfConfig":"21"},{"size":4225,"mtime":1624314624000,"results":"36","hashOfConfig":"21"},{"size":1429,"mtime":1624314624000,"results":"37","hashOfConfig":"21"},{"size":2361,"mtime":1667481805323,"results":"38","hashOfConfig":"21"},{"size":923,"mtime":1624314624000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"10chbxb",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"L:\\prog\\TodoTaskslist\\src\\index.tsx",[],["83","84"],"L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\todolists-reducer.ts",["85","86"],"import { TodolistType } from \"../../api/todolists-api\";\nimport { Dispatch } from \"redux\";\nimport {\n  RequestStatusType,\n  SetAppStatusActionType,\n} from \"../../app/app-reducer\";\n\nconst initialState: Array<TodolistDomainType> = [];\n\nexport const todolistsReducer = (\n  state: Array<TodolistDomainType> = initialState,\n  action: ActionsType\n): Array<TodolistDomainType> => {\n  switch (action.type) {\n    case \"REMOVE-TODOLIST\":\n      return state.filter((tl) => tl.id != action.id);\n    case \"ADD-TODOLIST\":\n      return [\n        { ...action.todolist, filter: \"all\", entityStatus: \"idle\" },\n        ...state,\n      ];\n\n    case \"CHANGE-TODOLIST-TITLE\":\n      return state.map((tl) =>\n        tl.id === action.id ? { ...tl, title: action.title } : tl\n      );\n    case \"CHANGE-TODOLIST-FILTER\":\n      return state.map((tl) =>\n        tl.id === action.id ? { ...tl, filter: action.filter } : tl\n      );\n    case \"CHANGE-TODOLIST-ENTITY-STATUS\":\n      return state.map((tl) =>\n        tl.id === action.id ? { ...tl, entityStatus: action.status } : tl\n      );\n    case \"SET-TODOLISTS\":\n      return action.todolists.map((tl) => ({\n        ...tl,\n        filter: \"all\",\n        entityStatus: \"idle\",\n      }));\n    default:\n      return state;\n  }\n};\n\n// actions\nexport const removeTodolistAC = (id: string) =>\n  ({ type: \"REMOVE-TODOLIST\", id } as const);\nexport const addTodolistAC = (todolist: TodolistType) =>\n  ({ type: \"ADD-TODOLIST\", todolist } as const);\nexport const changeTodolistTitleAC = (id: string, title: string) =>\n  ({\n    type: \"CHANGE-TODOLIST-TITLE\",\n    id,\n    title,\n  } as const);\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) =>\n  ({\n    type: \"CHANGE-TODOLIST-FILTER\",\n    id,\n    filter,\n  } as const);\nexport const changeTodolistEntityStatusAC = (\n  id: string,\n  status: RequestStatusType\n) =>\n  ({\n    type: \"CHANGE-TODOLIST-ENTITY-STATUS\",\n    id,\n    status,\n  } as const);\nexport const setTodolistsAC = (todolists: Array<TodolistType>) =>\n  ({ type: \"SET-TODOLISTS\", todolists } as const);\n\n// types\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\ntype ActionsType =\n  | RemoveTodolistActionType\n  | AddTodolistActionType\n  | ReturnType<typeof changeTodolistTitleAC>\n  | ReturnType<typeof changeTodolistFilterAC>\n  | SetTodolistsActionType\n  | ReturnType<typeof changeTodolistEntityStatusAC>;\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\nexport type TodolistDomainType = TodolistType & {\n  filter: FilterValuesType;\n  entityStatus: RequestStatusType;\n};\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>;\n","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["87","88","89"],"L:\\prog\\TodoTaskslist\\src\\api\\todolists-api.ts",[],"L:\\prog\\TodoTaskslist\\src\\app\\store.ts",[],"L:\\prog\\TodoTaskslist\\src\\app\\app-reducer.ts",[],"L:\\prog\\TodoTaskslist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"L:\\prog\\TodoTaskslist\\src\\app\\App.tsx",["90","91"],"import React, { useCallback, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  AppBar,\n  Button,\n  CircularProgress,\n  Container,\n  IconButton,\n  LinearProgress,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/icons\";\nimport { TodolistsList } from \"../features/TodolistsList/TodolistsList\";\nimport { ErrorSnackbar } from \"../components/ErrorSnackbar/ErrorSnackbar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppRootStateType } from \"./store\";\nimport { LogoutTC, RequestStatusType } from \"./app-reducer\";\nimport { Login } from \"../features/Login/Login\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { initializeApp } from \"./app-sagas\";\n\ntype PropsType = {\n  demo?: boolean;\n};\n\nfunction App({ demo = false }: PropsType) {\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(\n    (state) => state.auth.isLoggedIn\n  );\n  const isInitialized = useSelector<AppRootStateType, boolean>(\n    (state) => state.app.isInitialized\n  );\n  const status = useSelector<AppRootStateType, RequestStatusType>(\n    (state) => state.app.status\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(initializeApp());\n  }, []);\n  const LogoutHandler = useCallback(() => {\n    dispatch(LogoutTC());\n  }, []);\n\n  if (!isInitialized) {\n    return (\n      <div\n        style={{ position: \"fixed\", width: \"100%\", top: \"30%\", left: \"50%\" }}\n      >\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <ErrorSnackbar />\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n              <Menu />\n            </IconButton>\n            <Typography variant=\"h6\">News</Typography>\n            {isLoggedIn ? (\n              <Button color=\"inherit\" onClick={LogoutHandler}>\n                Log out\n              </Button>\n            ) : null}\n          </Toolbar>\n          {status === \"loading\" && <LinearProgress />}\n        </AppBar>\n        <Container fixed>\n          <Switch>\n            <Route\n              exact\n              path={\"/\"}\n              render={() => <TodolistsList demo={demo} />}\n            />\n            <Route path={\"/login\"} render={() => <Login />} />\n            <Route path={\"/404\"} render={() => <h1>404: PAGE NOT FOUND</h1>} />\n            <Redirect from={\"*\"} to={\"/404\"} />\n          </Switch>\n        </Container>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\tasks-reducer.ts",["92"],"L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["93","94","95","96","97","98"],"L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\TodolistsList.tsx",["99","100","101","102","103","104","105","106"],"import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppRootStateType } from \"../../app/store\";\nimport {\n  changeTodolistFilterAC,\n  FilterValuesType,\n  TodolistDomainType,\n} from \"./todolists-reducer\";\nimport { TasksStateType } from \"./tasks-reducer\";\nimport {\n  addTask as addTaskSG,\n  removeTask as removeTaskSG,\n  updateTask,\n} from \"./tasks-sagas\";\nimport { TaskStatuses } from \"../../api/todolists-api\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { AddItemForm } from \"../../components/AddItemForm/AddItemForm\";\nimport { Todolist } from \"./Todolist/Todolist\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  fetchTodolists,\n  removeTodolist as removeTodolistSG,\n  addTodolist as addTodolistSG,\n  changeTodolistTitle as changeTodolistTitleSG,\n} from \"./todolist-sagas\";\n\ntype PropsType = {\n  demo?: boolean;\n};\n\nexport const TodolistsList: React.FC<PropsType> = ({ demo = false }) => {\n  const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(\n    (state) => state.todolists\n  );\n  const tasks = useSelector<AppRootStateType, TasksStateType>(\n    (state) => state.tasks\n  );\n  const isLoggedIn = useSelector<AppRootStateType, boolean>(\n    (state) => state.auth.isLoggedIn\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (demo || !isLoggedIn) {\n      return;\n    }\n    const thunk = fetchTodolists();\n    dispatch(thunk);\n  }, []);\n\n  const removeTask = useCallback(function (id: string, todolistId: string) {\n    const thunk = removeTaskSG(id, todolistId);\n    dispatch(thunk);\n  }, []);\n\n  const addTask = useCallback(function (title: string, todolistId: string) {\n    const thunk = addTaskSG(title, todolistId);\n    dispatch(thunk);\n  }, []);\n\n  const changeStatus = useCallback(function (\n    id: string,\n    status: TaskStatuses,\n    todolistId: string\n  ) {\n    const thunk = updateTask(id, { status }, todolistId);\n    dispatch(thunk);\n  },\n  []);\n\n  const changeTaskTitle = useCallback(function (\n    id: string,\n    newTitle: string,\n    todolistId: string\n  ) {\n    const thunk = updateTask(id, { title: newTitle }, todolistId);\n    dispatch(thunk);\n  },\n  []);\n\n  const changeFilter = useCallback(function (\n    value: FilterValuesType,\n    todolistId: string\n  ) {\n    const action = changeTodolistFilterAC(todolistId, value);\n    dispatch(action);\n  },\n  []);\n\n  const removeTodolist = useCallback(function (id: string) {\n    const thunk = removeTodolistSG(id);\n    dispatch(thunk);\n  }, []);\n\n  const changeTodolistTitle = useCallback(function (id: string, title: string) {\n    const thunk = changeTodolistTitleSG(id, title);\n    dispatch(thunk);\n  }, []);\n\n  const addTodolist = useCallback(\n    (title: string) => {\n      const thunk = addTodolistSG(title);\n      dispatch(thunk);\n    },\n    [dispatch]\n  );\n\n  if (!isLoggedIn) {\n    return <Redirect to={\"/login\"} />;\n  }\n  return (\n    <>\n      <Grid container style={{ padding: \"20px\" }}>\n        <AddItemForm addItem={addTodolist} />\n      </Grid>\n      <Grid container spacing={3}>\n        {todolists.map((tl) => {\n          let allTodolistTasks = tasks[tl.id];\n\n          return (\n            <Grid item key={tl.id}>\n              <Paper style={{ padding: \"10px\" }}>\n                <Todolist\n                  todolist={tl}\n                  tasks={allTodolistTasks}\n                  removeTask={removeTask}\n                  changeFilter={changeFilter}\n                  addTask={addTask}\n                  changeTaskStatus={changeStatus}\n                  removeTodolist={removeTodolist}\n                  changeTaskTitle={changeTaskTitle}\n                  changeTodolistTitle={changeTodolistTitle}\n                  demo={demo}\n                />\n              </Paper>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n","L:\\prog\\TodoTaskslist\\src\\components\\AddItemForm\\AddItemForm.tsx",["107","108","109"],"L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\tasks-sagas.ts",["110"],"L:\\prog\\TodoTaskslist\\src\\app\\app-sagas.ts",[],"L:\\prog\\TodoTaskslist\\src\\utils\\error-utils.ts",[],"L:\\prog\\TodoTaskslist\\src\\features\\Login\\Login.tsx",["111"],"import React from 'react'\nimport {\n    Button,\n    Checkbox,\n    FormControl,\n    FormControlLabel,\n    FormGroup,\n    FormLabel,\n    Grid,\n    TextField\n} from \"@material-ui/core\";\nimport {useFormik} from \"formik\";\nimport {loginTC} from \"./auth-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../app/store\";\nimport {Redirect} from \"react-router-dom\";\n\ntype FormikErrorType = {\n    email?: string\n    password?: string\n    rememberMe?: boolean\n}\nexport const Login = () => {\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state=>state.auth.isLoggedIn)\n   // const {isLoggedIn} = useSelector(selectAuthStore)\n\n    const dispatch = useDispatch()\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            rememberMe: false\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = 'email is required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = 'password is required';\n            } else if (values.password.length <= 2) {\n                errors.password = 'password must be at least 3 letters long';\n            }\n            return errors;\n        },\n        onSubmit: values => {\n            debugger\n            // alert(JSON.stringify(values))\n            dispatch(loginTC(values))\n            formik.resetForm()\n        }\n    })\n\n    if (isLoggedIn) {\n        return <Redirect to={'/'}/>\n    }\n    return (\n        <Grid container justify='center'>\n            <Grid item xs={4}>\n                <form onSubmit={formik.handleSubmit}>\n                    <FormControl>\n                        <FormLabel>\n                            <p>To log in get registered\n                                <a href={'https://social-network.samuraijs.com/'}\n                                   target={'_blank'}> here\n                                </a>\n                            </p>\n                            <p>or use common test account credentials:</p>\n                            <p>Email: free@samuraijs.com</p>\n                            <p>Password: free</p>\n                        </FormLabel>\n                        <FormGroup>\n                            <TextField\n                                label='email'\n                                margin='normal'\n                                {...formik.getFieldProps('email')}\n                                onBlur={formik.handleBlur}/>\n                            {formik.touched.email && formik.errors.email ?\n                                <div style={{color: 'red'}}>\n                                    {formik.errors.email}\n                                </div> : null}\n                            <TextField\n                                type='password'\n                                label='password'\n                                margin='normal'\n                                {...formik.getFieldProps('password')}\n                                onBlur={formik.handleBlur}\n                            />\n                            {formik.touched.password && formik.errors.password ?\n                                <div style={{color: 'red'}}>\n                                    {formik.errors.password}\n                                </div> : null}\n                            <FormControlLabel\n                                label={'Remember me'}\n                                control={<Checkbox\n                                    onChange={formik.handleChange}\n                                    value={formik.values.rememberMe}\n                                    name='rememberMe'\n                                />}/>\n                            <Button type={'submit'} variant={'contained'} color={'primary'}>\n                                Login\n                            </Button>\n                        </FormGroup>\n                    </FormControl>\n                </form>\n            </Grid>\n        </Grid>\n    )\n}","L:\\prog\\TodoTaskslist\\src\\features\\Login\\auth-reducer.ts",[],"L:\\prog\\TodoTaskslist\\src\\features\\TodolistsList\\todolist-sagas.ts",[],"L:\\prog\\TodoTaskslist\\src\\components\\EditableSpan\\EditableSpan.tsx",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":16,"column":41,"nodeType":"118","messageId":"119","endLine":16,"endColumn":43},{"ruleId":"120","severity":1,"message":"121","line":91,"column":6,"nodeType":"122","messageId":"123","endLine":91,"endColumn":19},{"ruleId":"124","severity":1,"message":"125","line":15,"column":97,"nodeType":"126","endLine":15,"endColumn":130,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"125","line":20,"column":8,"nodeType":"126","endLine":20,"endColumn":41,"suggestions":"128"},{"ruleId":"124","severity":1,"message":"125","line":24,"column":8,"nodeType":"126","endLine":24,"endColumn":41,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"130","line":41,"column":6,"nodeType":"126","endLine":41,"endColumn":8,"suggestions":"131"},{"ruleId":"124","severity":1,"message":"132","line":44,"column":6,"nodeType":"126","endLine":44,"endColumn":8,"suggestions":"133"},{"ruleId":"120","severity":1,"message":"121","line":101,"column":6,"nodeType":"122","messageId":"123","endLine":101,"endColumn":19},{"ruleId":"124","severity":1,"message":"134","line":43,"column":6,"nodeType":"126","endLine":43,"endColumn":8,"suggestions":"135"},{"ruleId":"124","severity":1,"message":"125","line":51,"column":5,"nodeType":"126","endLine":51,"endColumn":39,"suggestions":"136"},{"ruleId":"124","severity":1,"message":"125","line":61,"column":5,"nodeType":"126","endLine":61,"endColumn":51,"suggestions":"137"},{"ruleId":"124","severity":1,"message":"125","line":66,"column":5,"nodeType":"126","endLine":66,"endColumn":44,"suggestions":"138"},{"ruleId":"124","severity":1,"message":"125","line":70,"column":5,"nodeType":"126","endLine":70,"endColumn":44,"suggestions":"139"},{"ruleId":"124","severity":1,"message":"125","line":74,"column":5,"nodeType":"126","endLine":74,"endColumn":44,"suggestions":"140"},{"ruleId":"124","severity":1,"message":"141","line":50,"column":6,"nodeType":"126","endLine":50,"endColumn":8,"suggestions":"142"},{"ruleId":"124","severity":1,"message":"132","line":55,"column":6,"nodeType":"126","endLine":55,"endColumn":8,"suggestions":"143"},{"ruleId":"124","severity":1,"message":"132","line":60,"column":6,"nodeType":"126","endLine":60,"endColumn":8,"suggestions":"144"},{"ruleId":"124","severity":1,"message":"132","line":70,"column":3,"nodeType":"126","endLine":70,"endColumn":5,"suggestions":"145"},{"ruleId":"124","severity":1,"message":"132","line":80,"column":3,"nodeType":"126","endLine":80,"endColumn":5,"suggestions":"146"},{"ruleId":"124","severity":1,"message":"132","line":89,"column":3,"nodeType":"126","endLine":89,"endColumn":5,"suggestions":"147"},{"ruleId":"124","severity":1,"message":"132","line":94,"column":6,"nodeType":"126","endLine":94,"endColumn":8,"suggestions":"148"},{"ruleId":"124","severity":1,"message":"132","line":99,"column":6,"nodeType":"126","endLine":99,"endColumn":8,"suggestions":"149"},{"ruleId":"120","severity":1,"message":"150","line":2,"column":9,"nodeType":"122","messageId":"123","endLine":2,"endColumn":12},{"ruleId":"120","severity":1,"message":"151","line":2,"column":14,"nodeType":"122","messageId":"123","endLine":2,"endColumn":20},{"ruleId":"120","severity":1,"message":"152","line":2,"column":22,"nodeType":"122","messageId":"123","endLine":2,"endColumn":33},{"ruleId":"120","severity":1,"message":"153","line":5,"column":3,"nodeType":"122","messageId":"123","endLine":5,"endColumn":12},{"ruleId":"154","severity":1,"message":"155","line":67,"column":36,"nodeType":"156","endLine":67,"endColumn":53},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'ThunkDispatch' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["159"],["160"],["161"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["162"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["163"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["164"],["165"],["166"],["167"],["168"],["169"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["170"],["171"],["172"],["173"],["174"],["175"],["176"],["177"],"'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'PutEffect' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"178","fix":"180"},{"desc":"178","fix":"181"},{"desc":"182","fix":"183"},{"desc":"182","fix":"184"},{"desc":"185","fix":"186"},{"desc":"178","fix":"187"},{"desc":"178","fix":"188"},{"desc":"178","fix":"189"},{"desc":"178","fix":"190"},{"desc":"178","fix":"191"},{"desc":"192","fix":"193"},{"desc":"182","fix":"194"},{"desc":"182","fix":"195"},{"desc":"182","fix":"196"},{"desc":"182","fix":"197"},{"desc":"182","fix":"198"},{"desc":"182","fix":"199"},{"desc":"182","fix":"200"},"Update the dependencies array to be: [props]",{"range":"201","text":"202"},{"range":"203","text":"202"},{"range":"204","text":"202"},"Update the dependencies array to be: [dispatch]",{"range":"205","text":"206"},{"range":"207","text":"206"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"208","text":"209"},{"range":"210","text":"202"},{"range":"211","text":"202"},{"range":"212","text":"202"},{"range":"213","text":"202"},{"range":"214","text":"202"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"215","text":"216"},{"range":"217","text":"206"},{"range":"218","text":"206"},{"range":"219","text":"206"},{"range":"220","text":"206"},{"range":"221","text":"206"},{"range":"222","text":"206"},{"range":"223","text":"206"},[751,784],"[props]",[1052,1085],[1238,1271],[1235,1237],"[dispatch]",[1315,1317],[1389,1391],"[demo, dispatch, props.todolist.id]",[1544,1578],[1806,1852],[1960,1999],[2112,2151],[2270,2309],[1460,1462],"[demo, dispatch, isLoggedIn]",[1617,1619],[1774,1776],[1983,1985],[2200,2202],[2401,2403],[2534,2536],[2699,2701]]